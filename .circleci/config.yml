version: 2
jobs:
  build_test_deploy:
    
    working_directory: ~/hello-mvn-obj

    docker:
      - image: circleci/openjdk:8-jdk-browsers
  
    steps:

      - checkout

      - restore_cache:
          key: hello-0.0.1-SNAPSHOT-{{ checksum "pom.xml" }}
      
      # - run: mvn install:install-file -DgroupId=com.hello -DartifactId=hello -Dversion=9.1.2 -Dpackaging=jar -Dfile=asset/lib/hello-0.0.1-SNAPSHOT.jar
      
      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: hello-0.0.1-SNAPSHOT-{{ checksum "pom.xml" }}
      
      - run: mvn clean package -DskipTests
      - run: pwd
      
      - store_test_results:
          path: target/surefire-reports
      
      - store_artifacts:
          path: target/hello-0.0.1-SNAPSHOT.jar

      - setup_remote_docker

      - run: 
          command: |
            set -x 
            docker build -t appmanagm/hello:0.0.${CIRCLE_BUILD_NUM} .

      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push appmanagm/hello:0.0.${CIRCLE_BUILD_NUM}
 
  deploy_to_staging:

      working_directory: ~/hello-mvn-obj

      docker:
        - image: google/cloud-sdk
    
      environment:
        - PROJECT_NAME: "hello"
        - GOOGLE_PROJECT_ID: "aerobic-bonus-229404 "
        - GOOGLE_COMPUTE_ZONE: "us-central1-a"
        - GOOGLE_CLUSTER_NAME: "hello-cluster-1"

      steps:

        - checkout

        - run: 
            #name: Setup Google Cloud SDK
            command: |
              apt-get install -qq -y gettext
              echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
              gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
              gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
              gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
              gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
     
        - setup_remote_docker
        - run: 
          #  name: Docker build and push
            command: |
              set -x
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker pull appmanagm/hello:0.${CIRCLE_BUILD_NUM} .
              
        - run: 
            # name: Deploy to Kubernetes
            command: |
              envsubst < ${HOME}/project/k8s.yml > ${HOME}/patched_k8s.yml
              kubectl apply -f ${HOME}/patched_k8s.yml
              kubectl rollout status deployment/${PROJECT_NAME}

        #- run: docker run -d --name db appmanagm/hello:v0.3
          
        # build the application image
        #- run: docker build -t appmanagm/hello:$CIRCLE_BRANCH .

      # deploy the image
      # - run: docker push appmanagm/hello:$CIRCLE_BRANCH

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_test_deploy
      - deploy_to_staging:
          requires:
            - build_test_deploy
          filters:
            branches:
              only: master
